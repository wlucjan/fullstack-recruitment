### Authentication Endpoints


### Login user

# @name LoginUser

POST http://localhost:3000/api/v1/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "test@te.st",
  "password": "password"
}


### User Management Endpoints


### Create user

# @name CreateUser

POST http://localhost:3000/api/v1/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}

{
  "email": "newuser3@example.com",
  "plainPassword": "password123",
  "role": "user"
}


### Create admin user

POST http://localhost:3000/api/v1/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}

{
  "email": "admin@example.com",
  "plainPassword": "adminpassword123",
  "role": "admin"
}


### Create user with validation errors (invalid email)

POST http://localhost:3000/api/v1/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}

{
  "email": "invalid-email",
  "plainPassword": "password123",
  "role": "user"
}


### Create user with validation errors (short password)

POST http://localhost:3000/api/v1/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}

{
  "email": "test@example.com",
  "plainPassword": "short",
  "role": "user"
}


### Create user with validation errors (invalid role)

POST http://localhost:3000/api/v1/users HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}

{
  "email": "test@example.com",
  "plainPassword": "password123",
  "role": "invalid_role"
}


### Delete user

DELETE http://localhost:3000/api/v1/users/{{CreateUser.response.body.id}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{LoginUser.response.body.access_token}}


### List users (default pagination)

GET http://localhost:3000/api/v1/users HTTP/1.1
Authorization: Bearer {{LoginUser.response.body.access_token}}


### List users with pagination parameters

GET http://localhost:3000/api/v1/users?page=1&limit=5 HTTP/1.1
Authorization: Bearer {{LoginUser.response.body.access_token}}


### Health Check Endpoints


### General health check (includes database)

GET http://localhost:3000/api/health HTTP/1.1


### Liveness probe (simple status check)

GET http://localhost:3000/api/health/live HTTP/1.1


### Readiness probe (includes database check)

GET http://localhost:3000/api/health/ready HTTP/1.1
